{"version":3,"sources":["spotify.ts","Login.tsx","reducer.ts","DataLayerProvider.tsx","Header.tsx","SongRow.tsx","Body.tsx","Footer.tsx","SidebarOption.tsx","Sidebar.tsx","Player.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["redirectUri","loginUrl","join","Login","console","log","className","src","alt","href","initialState","token","user","playlists","playing","firstPlaylist","lastPlayedTrack","premium","reducer","state","action","type","DataLayerContext","createContext","DataLayer","props","useReducer","value","dispatch","Provider","children","useDataLayerValue","useContext","headerRefDiv","Header","ref","el","placeholder","images","Avatar","url","display_name","SongRow","track","onClick","album","name","artists","map","artist","Body","useEffect","scrollIntoView","description","tracks","items","item","id","Footer","styles","bgColor","color","style","textAlign","minWidth","SidebarOption","title","Icon","onClickHandler","playlistID","e","Sidebar","changePlayList","spotify","getPlaylist","then","playlist","HomeIcon","SearchIcon","LibraryMusicIcon","Player","spotifyObj","SpotifyWebApi","App","_token","currUri","window","location","hash","substring","URLSearchParams","get","getTokenFromUrl","setAccessToken","getMe","product","getUserPlaylists","firstPlaylistID","getMyRecentlyPlayedTracks","listOfTracks","lastTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b89b056f.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\nexport const redirectUri =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://kevinc16.github.io/spotify_clone/\"\r\n    : \"http://localhost:3000\";\r\n\r\nconst clientId = \"bd28a5b8d6744af2b8c5b8b4e7b2a0f0\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n  \"streaming\",\r\n  \"user-read-email\",\r\n  \"user-read-private\",\r\n  \"user-library-read\",\r\n  \"user-library-modify\",\r\n];\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`; // %20 = ascii for space\r\n\r\nexport const getTokenFromUrl = () => {\r\n  const currUri = window.location.hash.substring(1);\r\n  const token = new URLSearchParams(currUri).get(\"access_token\");\r\n\r\n  // const params = new URLSearchParams(currUri).entries();\r\n\r\n  // for(const entry of Array.from(params)) {\r\n  //   console.log(`${entry[0]}: ${entry[1]}`);\r\n  // }\r\n  // console.log(token);\r\n\r\n  return token;\r\n};\r\n","import React from \"react\";\r\nimport \"./css/Login.css\";\r\n\r\nimport { loginUrl, redirectUri } from \"./spotify\";\r\n\r\nfunction Login() {\r\n  console.log(redirectUri);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <img\r\n        src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_CMYK_White.png\"\r\n        alt=\"\"\r\n        className=\"logo\"\r\n      ></img>\r\n      <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// import  from \"spotify-web-api-js\";\r\n\r\nexport interface IInitialState {\r\n  token: string;\r\n  user: SpotifyApi.CurrentUsersProfileResponse | null;\r\n  playlists: SpotifyApi.ListOfUsersPlaylistsResponse | null;\r\n  playing: null;\r\n  // item: null;\r\n  firstPlaylist: SpotifyApi.SinglePlaylistResponse | null;\r\n  // lastPlayedTrack:\r\n  //   | SpotifyApi.TrackObjectSimplified\r\n  //   | SpotifyApi.TrackObjectFull\r\n  //   | null;\r\n  lastPlayedTrack: any;\r\n  premium: boolean;\r\n}\r\n\r\ninterface ISetUser {\r\n  user: SpotifyApi.CurrentUsersProfileResponse;\r\n  type: \"SET_USER\";\r\n}\r\n\r\ninterface ISetToken {\r\n  token: string;\r\n  type: \"SET_TOKEN\";\r\n}\r\n\r\ninterface ISetPlaylists {\r\n  playlists: SpotifyApi.ListOfUsersPlaylistsResponse;\r\n  type: \"SET_PLAYLISTS\";\r\n}\r\n\r\ninterface ISetFirstPlaylist {\r\n  firstPlaylist: SpotifyApi.SinglePlaylistResponse;\r\n  type: \"SET_FIRST_PLAYLIST\";\r\n}\r\n\r\ninterface ISetLastPlayedTrack {\r\n  lastPlayedTrack:\r\n    | SpotifyApi.TrackObjectSimplified\r\n    | SpotifyApi.TrackObjectFull;\r\n  type: \"SET_LAST_PLAYED_TRACK\";\r\n}\r\n\r\ninterface ISetPremium {\r\n  premium: boolean;\r\n  type: \"SET_PREMIUM\";\r\n}\r\n\r\nexport type Actions =\r\n  | ISetUser\r\n  | ISetToken\r\n  | ISetPlaylists\r\n  | ISetFirstPlaylist\r\n  | ISetLastPlayedTrack\r\n  | ISetPremium;\r\n\r\nexport const initialState: IInitialState = {\r\n  token: \"\",\r\n  user: null,\r\n  playlists: null,\r\n  playing: null,\r\n  // item: null,\r\n  firstPlaylist: null,\r\n  lastPlayedTrack: null,\r\n  premium: false,\r\n};\r\n\r\nexport const reducer = (state: IInitialState, action: Actions) => {\r\n  console.log(\"reducer\", action);\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_FIRST_PLAYLIST\":\r\n      return {\r\n        ...state,\r\n        firstPlaylist: action.firstPlaylist,\r\n      };\r\n    case \"SET_LAST_PLAYED_TRACK\":\r\n      return {\r\n        ...state,\r\n        lastPlayedTrack: action.lastPlayedTrack,\r\n      };\r\n    case \"SET_PREMIUM\":\r\n      return {\r\n        ...state,\r\n        lastPlayedTrack: action.premium,\r\n      };\r\n    default:\r\n      console.log(\"nothing\");\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createContext, useContext, useReducer, Dispatch } from \"react\";\r\nimport { IInitialState, Actions, reducer, initialState } from \"./reducer\";\r\n\r\ninterface IContextProps {\r\n  state: IInitialState;\r\n  dispatch: Dispatch<Actions>;\r\n}\r\n\r\nexport const DataLayerContext = createContext({} as IContextProps);\r\n\r\nexport const DataLayer = (props: any) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const value = { state, dispatch };\r\n  return (\r\n    <DataLayerContext.Provider value={value}>\r\n      {props.children}\r\n    </DataLayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from \"react\";\r\nimport \"./css/Header.css\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nimport { useDataLayerValue } from \"./DataLayerProvider\";\r\n\r\nexport let headerRefDiv: HTMLDivElement | null = null;\r\n\r\nfunction Header() {\r\n  const { state, dispatch } = useDataLayerValue();\r\n  const user = state.user;\r\n\r\n  return (\r\n    <div\r\n      className=\"header\"\r\n      ref={(el) => {\r\n        headerRefDiv = el;\r\n      }}\r\n    >\r\n      <div className=\"header__left\">\r\n        <SearchIcon />\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        {user && (\r\n          <>\r\n            {user.images && (\r\n              <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n            )}\r\n            <h4>{user?.display_name}</h4>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { spotify } from \"./App\";\r\nimport \"./css/SongRow.css\";\r\nimport { useDataLayerValue } from \"./DataLayerProvider\";\r\n\r\ninterface ISongRowProps {\r\n  track: any;\r\n}\r\n\r\nfunction SongRow({ track }: ISongRowProps) {\r\n  const { state, dispatch } = useDataLayerValue();\r\n\r\n  const handleChangeSong = () => {\r\n    // spotify.play();\r\n    dispatch({ type: \"SET_LAST_PLAYED_TRACK\", lastPlayedTrack: track });\r\n  };\r\n\r\n  return (\r\n    track && (\r\n      <div className=\"songRow\" onClick={handleChangeSong}>\r\n        <img\r\n          src={track.album?.images[0]?.url}\r\n          alt={track.name}\r\n          className=\"songRow__album\"\r\n        />\r\n        <div className=\"songRow__info\">\r\n          <h1>{track.name}</h1>\r\n          <p>\r\n            {track.artists.map((artist: any) => artist.name).join(\", \")} -{\" \"}\r\n            {track.album?.name}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./css/Body.css\";\r\nimport Header from \"./Header\";\r\n\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nimport SongRow from \"./SongRow\";\r\nimport { useDataLayerValue } from \"./DataLayerProvider\";\r\n\r\nimport { headerRefDiv } from \"./Header\";\r\n\r\nfunction Body() {\r\n  const { state, dispatch } = useDataLayerValue();\r\n  const firstPlaylist = state.firstPlaylist;\r\n\r\n  useEffect(() => {\r\n    if (headerRefDiv) headerRefDiv.scrollIntoView();\r\n  }, [firstPlaylist]);\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header />\r\n      {firstPlaylist && (\r\n        <>\r\n          <div className=\"body__info\">\r\n            <img src={firstPlaylist.images[0]?.url} alt=\"discoverweekly\" />\r\n            <div className=\"body__infoText\">\r\n              <strong>PLAYLIST</strong>\r\n              <h2>{firstPlaylist.name}</h2>\r\n              <p>{firstPlaylist.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"body__songs\">\r\n            <div className=\"body__icons\">\r\n              <PlayCircleFilledIcon className=\"body__shuffle\" />\r\n              <FavoriteIcon />\r\n              <MoreHorizIcon />\r\n            </div>\r\n            {/* list of songs */}\r\n            {firstPlaylist.tracks.items.map((item) => {\r\n              // add onclick to change songs\r\n              return <SongRow track={item.track} key={item.track.id} />;\r\n            })}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport \"./css/Footer.css\";\r\nimport { useDataLayerValue } from \"./DataLayerProvider\";\r\n\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\n\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeUp\";\r\n// import Playbar from \"./Playbar\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\n\r\n// to play the song - https://developer.spotify.com/documentation/web-playback-sdk/quick-start/\r\n\r\nfunction Footer() {\r\n  const { state, dispatch } = useDataLayerValue();\r\n  const lastPlayedTrack: SpotifyApi.TrackObjectFull = state.lastPlayedTrack;\r\n\r\n  return (\r\n    <div className=\"footer\">\r\n      {lastPlayedTrack && (\r\n        <div className=\"footer__left\">\r\n          <img\r\n            src={lastPlayedTrack.album.images[0].url} // this definitely has album - so i use any here\r\n            alt=\"\"\r\n            className=\"footer__albumLogo\"\r\n          />\r\n          <div className=\"footer__songInfo\">\r\n            <h4>{lastPlayedTrack.name}</h4>\r\n            <p>\r\n              {lastPlayedTrack.artists\r\n                .map((artist: any) => artist.name)\r\n                .join(\", \")}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"footer__center\">\r\n        <div className=\"footer__centerIcons\">\r\n          {/* <ShuffleIcon className=\"footer__icon\" />\r\n          <SkipPreviousIcon className=\"footer__icon\" />\r\n          <PlayCircleOutlineIcon fontSize=\"large\" className=\"footer__icon\" />\r\n          <SkipNextIcon className=\"footer__icon\" />\r\n          <RepeatIcon className=\"footer__icon\" /> */}\r\n          {state.premium ? (\r\n            <SpotifyPlayer\r\n              token={state.token}\r\n              styles={{\r\n                bgColor: \"#282828\",\r\n                color: \"white\",\r\n              }}\r\n            />\r\n          ) : (\r\n            <p style={{textAlign:\"center\", minWidth:\"200px\"}}>Can't play songs because you don't have premium :c</p>\r\n          )}\r\n        </div>\r\n        {/* <Playbar {...lastPlayedTrack} /> */}\r\n      </div>\r\n      <div className=\"footer__right\">\r\n        {/* <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider className=\"footer__volumeSlider\" />\r\n          </Grid>\r\n        </Grid> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { SvgIconTypeMap } from \"@material-ui/core\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport \"./css/SidebarOption.css\";\r\n\r\ninterface ISidebarOptionProps {\r\n  title: string;\r\n  Icon?: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n  onClickHandler?: (playlistID: string) => void;\r\n  playlistID?: string;\r\n}\r\n\r\nfunction SidebarOption({\r\n  title,\r\n  Icon,\r\n  onClickHandler,\r\n  playlistID,\r\n}: ISidebarOptionProps) {\r\n  // add onclick?\r\n  return onClickHandler ? (\r\n    <div className=\"sidebarOption\" onClick={(e) => onClickHandler(playlistID!)}>\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  ) : (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React, { MouseEventHandler } from \"react\";\r\nimport \"./css/Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport { spotify } from \"./App\";\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\n\r\nimport { useDataLayerValue } from \"./DataLayerProvider\";\r\n\r\nfunction Sidebar() {\r\n  const { state, dispatch } = useDataLayerValue();\r\n  const playlists = state.playlists;\r\n\r\n  const changePlayList = (playlistID: string) => {\r\n    spotify.getPlaylist(playlistID).then((playlist) => {\r\n      dispatch({ type: \"SET_FIRST_PLAYLIST\", firstPlaylist: playlist });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n        className=\"sidebar__logo\"\r\n      ></img>\r\n      <SidebarOption title=\"Home\" Icon={HomeIcon} />\r\n      <SidebarOption title=\"Search\" Icon={SearchIcon} />\r\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\r\n\r\n      <br />\r\n      <strong className=\"sidebar__playlistTitle\">PLAYLISTS</strong>\r\n      <hr />\r\n\r\n      {/* for each playlist */}\r\n      {/* a?.b === a && a.b */}\r\n      {playlists?.items?.map((playlist) => {\r\n        return (\r\n          <SidebarOption\r\n            title={playlist.name}\r\n            key={playlist.id}\r\n            playlistID={playlist.id}\r\n            onClickHandler={changePlayList}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\nimport \"./css/Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nfunction Player(spotifyObj: any) {\r\n  return <div className=\"player\">\r\n    <div className=\"player__body\">\r\n      {/* sidebar */}\r\n      <Sidebar/>\r\n      {/* body */}\r\n      <Body/>\r\n    </div>\r\n    {/* footer */}\r\n    <Footer/>\r\n  </div>;\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect } from \"react\";\nimport \"./css/App.css\";\n\nimport Login from \"./Login\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport Player from \"./Player\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport { useDataLayerValue } from \"./DataLayerProvider\";\n\n// main page -> recently played playlists & top artists\n// playlists is dynamic\n// able to play songs\n\nexport const spotify = new SpotifyWebApi(); // main api object\n\nfunction App() {\n  const { state, dispatch } = useDataLayerValue();\n  const token = state.token;\n\n  // runs the first time rendered - gets token after redirect\n  useEffect(() => {\n    const _token = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    // we initialize everything here\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({ type: \"SET_TOKEN\", token: _token });\n\n      spotify.getMe().then((user) => {\n        dispatch({ type: \"SET_USER\", user });\n        if (user.product === \"premium\") {\n          dispatch({ type: \"SET_PREMIUM\", premium: true });\n        } else {\n          dispatch({ type: \"SET_PREMIUM\", premium: false });\n        }\n      });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({ type: \"SET_PLAYLISTS\", playlists });\n        const firstPlaylistID = playlists.items[0].id;\n        // get info of the playlist\n        spotify.getPlaylist(firstPlaylistID).then((playlist) => {\n          dispatch({ type: \"SET_FIRST_PLAYLIST\", firstPlaylist: playlist });\n        });\n      });\n\n      spotify.getMyRecentlyPlayedTracks().then((listOfTracks) => {\n        const lastTrack = listOfTracks.items[0].track;\n        dispatch({ type: \"SET_LAST_PLAYED_TRACK\", lastPlayedTrack: lastTrack });\n      });\n\n      // spotify.play();\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {!token ? <Login /> : <Player spotifyObj={spotify} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { DataLayer } from \"./DataLayerProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}